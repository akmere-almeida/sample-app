plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

def LIB_VERSION = System.getenv("LIB_VERSION")
private boolean hasLibraryProject() {
    boolean hasProject = findProject("${rootProject.projectDir}/sample-library") != null ||
            findProject("${rootProject.projectDir}/sample-library/mylibrary") != null

    println(hasProject.toString())
    return hasProject
}

private String libraryProject() {
    if (findProject(':sample-library')) {
        println("Sample Library Found")
        return ':samplelibrary'
    } else if (findProject(':sample-library:mylibrary')) {
        println("Sample Library mylibrary found")
        return ':sample-library:mylibrary'
    } else{
        println("Sample Library not Found")
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.akmere.sample"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "projectLocation"

    productFlavors {
        if (hasLibraryProject()) {
            println("Has Library 44")

            withLocalProject {
                versionName "sample.withLocalProject.$LIB_VERSION"
                dimension "projectLocation"
                isDefault.set(true)
            }
        }
        withExternalLib {
            versionName "sample.$LIB_VERSION"
            dimension "projectLocation"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

configurations {
    if (hasLibraryProject()) {
        withLocalProjectImplementation
    }

    withExternalLibImplementation
}

repositories {
    maven {
        url 'https://samplelibrary.jfrog.io/artifactory/sample'
        credentials {
            username = System.getenv("LOCAL_ARTIFACTORY_USER") // The publisher user name

            password = System.getenv("LOCAL_ARTIFACTORY_PASSWORD") // The publisher password
        }
    }
}

dependencies {
    if (hasLibraryProject()) {
        withLocalProjectImplementation(project(path: libraryProject()))
    } else {
        withExternalLibImplementation("com.akmere.sample_library:mylibrary:$LIB_VERSION")
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}